name: Build and Publish

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
      - name: Install wasm-pack
        run: cargo install wasm-pack
      - name: Install napi-cli
        run: cargo install napi-cli
      - name: Build release artifacts
        run: ./scripts/build-release.sh
      - name: Upload platform-specific artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-${{ matrix.platform }}
          path: |
            packages/rustyweb/pkg
            packages/rustyweb/native
            packages/rustyweb/bin

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download artifacts (linux)
        uses: actions/download-artifact@v4
        with:
          name: artifacts-ubuntu-latest
          path: ./artifacts
      - name: Merge artifacts into package
        run: |
          # ensure artifacts are in packages/rustyweb before publishing
          cp -r ./artifacts/* packages/rustyweb/ || true
      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cd packages/rustyweb
          npm publish --access public
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: packages/rustyweb/bin/*,packages/rustyweb/native/*,packages/rustyweb/pkg/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
